openapi: 3.0.0
info:
  version: 1.0.6
  title: Insolar internal API
  contact:
    name: Insolar dev team
    url: 'https://insolar.io/about#team'
    email: dev-support@insolar.io
  description: >
    [Insolar](https://github.com/insolar/insolar) Platform JSON RPC 2.0 API
    documentation.


    # Definitions Overview


    Insolar is being developed to provide interoperation between enterprises.


    From a business perspective:

      * Any enterprise is regarded as an *entity* with a corresponding *identity* — a **member** object stored in the blockchain.
      * Any member has its own *account* to/from which the member can transfer funds.

    From a technical perspective:

      * Every member object is identified by a **reference** in the blockchain.
      * The reference is effectively the member's *address*.

    Therefore, an entity wishing to transfer funds to/from its account from/to a
    particular address, in Insolar's terms, is a member object identified by its
    reference wishing to transfer funds to some other member identified by the
    corresponding reference.


    Insolar uses these terms in method and parameter names.


    # Request Specification


    Insolar has two types of requests that have the same *base* structure in
    accordance with the [JSON RPC 2.0](https://www.jsonrpc.org/specification)
    specification:


    * [Information](#tag/Information) requests that do not require a seed.

    * Contract requests that do. These requests are described in
    [Member](#tag/Member) and [Migration](#tag/Migration) sections.


    Seed is a unique piece of information generated by a node that:


    * has a short lifespan — 10 minutes;

    * expires upon first use;

    * protects from request duplicates.


    Since the seed is generated by a node, it must be validated by the same
    node. Therefore, each subsequent contract request containing the seed must
    be sent to the node that generated it.


    To call a smart contract's method, go through the following steps:


    1. Send a [getSeed](/#operation/get-seed) information request and receive
    the seed.

       For example, the `getSeed` request is as follows:

       ```json
       {
           "jsonrpc": "2.0",
           "id": 1,
           "method": "node.getSeed"
       }
       ```

       And the response is:

       ```json
       {
         "jsonrpc": "2.0",
         "id": 1,
         "result": {
         "seed": "<seed>"
         }
       }
       ```

    2. Form and sign a contract request (e.g.,
    [member.create](/#operation/member-create)) with the acquired seed.

       Every contract request is to contain the Digest and Signature HTTP headers. For example:

       ```
       POST /<endpoint> HTTP/1.1
       Host: <Host>
       Date: Tue, 07 Jun 2019 20:51:35 GMT
       Content-Type: application/json
       Digest: SHA-256=<hashString>
       Signature: keyId="public-key", algorithm="ecdsa", headers="digest", signature=<signatureString>

       { <payload> }
       ```

       And the contract request's `<payload>` with the seed may be as follows:

       ```json
       {
         "jsonprc": "2.0",
         "id": 2,
         "method": "contract.call",
         "params": {
           "seed": "<seed>",
           "callSite": "member.create",
           "callParams": {},
           "publicKey": "<pubicKey>"
         }
       }
       ```

       In this example:

       * [Digest HTTP header](https://tools.ietf.org/html/rfc3230#section-4.3.2) contains the Base64 `<hashString>` with the SHA-256 hash of the payload's bytes.

       * [Signature HTTP header](https://tools.ietf.org/id/draft-cavage-http-signatures-11.html#sig-header) contains the Base64 `<signatureString>` with the ECDSA (Elliptic Curve Digital Signature Algorithm) signature in the [ASN.1 DER format](https://www.itu.int/rec/dologin_pub.asp?lang=e&id=T-REC-X.690-201508-I!!PDF-E&type=items). Signed are the bytes of the hash from the Digest header.

       * `<pubicKey>` contains a Base64 string with the ECDSA public key in [PEM format](https://tools.ietf.org/html/rfc1421).

       * `<seed>` contains the seed acquired in the previous `getSeed` request.

       * `"method": "contract.call"` designates a call to a contract's method.

       * `callSite` is the contract method's call point, in this case, `member.create`.

       * `callParams` are the contract method's parameters.

    3. Send the formed and signed contract request to the node that generated
    the seed.

       Insolar responds to contract requests with:

       ```json
       {
         "jsonrpc": "2.0",
         "id": 2,
         "result": {
         "callResult": {
            "reference": <referenceString>
            },
         "requestReference": <requestReferenceString>,
         "traceID": <traceIDString>
         }
       }
       ```
       Where `"callResult"` contains the result of the contract's method execution. In this case, it is a reference to a newly created member object since the `"callSite"` of the request is `"member.create"`.

    # Errors


    Insolar follows the JSON RPC API conventions on [error
    codes](https://www.jsonrpc.org/specification#error_object), with values
    `-31000`-`-31999` reserved for the Insolar network.


    Below is the list of Insolar Platform errors.


    | **Code** | **Message**                                                 |

    |----------|-------------------------------------------------------------|

    | -31700   | Parsing error on the server side: received an invalid JSON. |

    | -31600   | The JSON received is not a valid request payload.           |

    | -31601   | Method does not exist / is not available.                   |

    | -31602   | Invalid method parameter(s).                                |

    | -31603   | Internal Platform error.                                    |

    | -31106   | Request's timeout has expired.                              |

    | -31401   | Action is not authorized.                                   |

    | -31429   | Service unavailable, try again later.                       |

    | -31103   | Execution error.                                            |


    # Versioning


    API sometimes changes in particular Insolar releases, so it is versioned via
    [SemVer 2.0](https://semver.org/spec/v2.0.0.html).


    API versions do not have correlations to Insolar Platform versions.
servers:
  - url: 'https://wallet-api.insolar.io'
    description: MainNet
  - url: 'https://wallet-api.testnet.insolar.io'
    description: TestNet
paths:
  '/admin-api/rpc#node.getSeed':
    post:
      summary: node.getSeed
      description: >
        Gets a new seed (random byte range).


        Each signed contract request has to contain a new seed in its body. Seed
        is a unique piece of information generated by a node that:

         * has a short lifespan — 10 minutes;
         * expires upon first use;
         * protects from request duplicates.

        Since the seed is generated by a node, it must be validated by the same
        node. Therefore, each subsequent contract request containing the seed
        must be sent to the node that generated it.
      operationId: internal-get-seed
      tags:
        - Node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-RPCRequest'
                - type: object
                  properties:
                    method:
                      type: string
                      enum:
                        - node.getSeed
                    params:
                      description: May be omitted as the method does not require any.
            example:
              jsonrpc: '2.0'
              method: node.getSeed
              id: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/definitions-responses-Seed-yaml'
                  - $ref: '#/components/schemas/response-unsignedRequestError'
              examples:
                success:
                  x-mock-call-count: -100
                  value:
                    jsonrpc: '2.0'
                    id: 1
                    result:
                      seed: U1wGm8xl+WUFIPFLdFupTXKMXbLoJbv0nA/ImZAtHZk=
                error:
                  $ref: '#/components/examples/executionError'
  '/admin-api/rpc#node.getStatus':
    post:
      summary: node.getStatus
      description: |
        Gets blockchain network statistics.
      operationId: get-status
      tags:
        - Node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-RPCRequest'
                - type: object
                  properties:
                    method:
                      type: string
                      enum:
                        - node.getStatus
                    params:
                      description: May be omitted as the method does not require any.
            example:
              jsonrpc: '2.0'
              method: node.getStatus
              id: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/definitions-responses-Status-yaml'
                  - $ref: '#/components/schemas/response-unsignedRequestError'
  '/admin-api/rpc#network.getInfo':
    post:
      summary: network.getInfo
      description: >
        Gets references to base objects: `rootMember`, `rootDomain`,
        `nodeDomain`, `migrationAdminMember`, and an array of
        `migrationDaemonMembers`.
      operationId: get-info
      tags:
        - Node
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-RPCRequest'
                - type: object
                  properties:
                    method:
                      type: string
                      enum:
                        - network.getInfo
                    params:
                      description: May be omitted as the method does not require any.
            example:
              jsonrpc: '2.0'
              method: network.getInfo
              id: 1
              params: {}
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/definitions-responses-Info-yaml'
                  - $ref: '#/components/schemas/response-unsignedRequestError'
  '/admin-api/rpc#member.getBalance':
    post:
      summary: member.getBalance
      description: |
        Gets the balance and all deposits of the `member` object.

        To invoke this method, specify the member `reference` in `callParams`.
      operationId: get-balance
      tags:
        - Member
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - member.getBalance
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - reference
                          properties:
                            reference:
                              allOf:
                                - $ref: '#/components/schemas/reference'
                                - description: >-
                                    Reference to the `member` object to get the
                                    balance from.
                                  example: >-
                                    insolar:1AfNjPWh7Ut-P7Ky7Mj7HLCte3gjGXi4RpXNxTvrhlww
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to your `member` object. Used for
                                identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          description: >
                            Public key of your `member` object. Used to check
                            the `<signatureString>` created by the paired
                            private key. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/definitions-responses-balance-yaml'
                  - $ref: '#/components/schemas/response-signedRequestError'
  '/admin-api/rpc#migration.deactivateDaemon':
    post:
      summary: migration.deactivateDaemon
      description: >
        Utility method that only the migration daemon administrator (a
        pre-created `migrationAdminMember`) can call.


        Deactivates an active migration daemon.


        To invoke this method, specify the daemon `reference`.
      operationId: migration-deactivate-daemon
      tags:
        - Daemon
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - migration.deactivateDaemon
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - reference
                          properties:
                            reference:
                              allOf:
                                - $ref: '#/components/schemas/reference'
                                - description: Reference to migration admin to deactivate.
                                  example: >-
                                    insolar:1AfNjPWh7Ut-P7Ky7Mj7HLCte3gjGXi4RpXNxTvrhlww
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to `migrationAdminMember`. Can be
                                acquired by the `migration.checkDaemon` status
                                request. Used for identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          description: >
                            Public key of the `migrationAdminMember` object.
                            Used to check the `<signatureString>` created by the
                            paired private key. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-success'
                  - $ref: '#/components/schemas/response-signedRequestError'
  '/admin-api/rpc#migration.activateDaemon':
    post:
      summary: migration.activateDaemon
      description: >
        Utility method that only the migration daemon administrator (a
        pre-created `migrationAdminMember`) can call.


        Activates a migration daemon.


        To invoke this method, specify the daemon `reference`.
      operationId: migration-change-daemon
      tags:
        - Daemon
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - migration.activateDaemon
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - reference
                          properties:
                            reference:
                              allOf:
                                - $ref: '#/components/schemas/reference'
                                - description: Reference to migration admin to activate.
                                  example: >-
                                    insolar:1AfNjPWh7Ut-P7Ky7Mj7HLCte3gjGXi4RpXNxTvrhlww
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to `migrationAdminMember`. Can be
                                acquired by the `migration.checkDaemon` status
                                request. Used for identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          description: >
                            Public key of the `migrationAdminMember` object.
                            Used to check the `<signatureString>` created by the
                            paired private key. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-success'
                  - $ref: '#/components/schemas/response-signedRequestError'
  '/admin-api/rpc#migration.checkDaemon':
    post:
      summary: migration.checkDaemon
      description: >
        Utility method that only the migration daemon administrator (a
        pre-created `migrationAdminMember`) and migration users (pre-created
        `migrationDaemonMember`s) can call.


        Checks the status of a migration daemon.


        To invoke this method, specify the daemon `reference`.
      operationId: migration-check-daemon
      tags:
        - Daemon
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - migration.checkDaemon
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - reference
                          properties:
                            reference:
                              allOf:
                                - $ref: '#/components/schemas/reference'
                                - description: >-
                                    Reference to a `migrationDaemonMember` whose
                                    status to check.
                                  example: >-
                                    insolar:1AfNjPWh7Ut-P7Ky7Mj7HLCte3gjGXi4RpXNxTvrhlww
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to `migrationAdminMember` or
                                `migrationDaemonMember`. Used for
                                identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          description: >
                            Public key of the `migrationAdminMember` or
                            `migrationDaemonMember` object. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-daemon-status-yaml'
                  - $ref: '#/components/schemas/response-signedRequestError'
  '/admin-api/rpc#migration.addAddresses':
    post:
      summary: migration.addAddresses
      description: >
        Utility method that only the migration daemon administrator (a
        pre-created `migrationAdminMember`) can call.


        Adds `migrationAddress`(es).


        To invoke this method, specify an array of `migrationAddresses`.


        During the migration period, the `member.migrationCreate` request gives
        such an address to each new `member` object.


        A smart contract monitors tokens sent to these addresses on the Ethereum
        network and [migrates](/#operation/deposit-migration) them to the
        Insolar network.
      operationId: add-migration-addresses
      tags:
        - Address
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - migration.addAddresses
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - migrationAddresses
                          properties:
                            migrationAddresses:
                              type: array
                              description: >-
                                Single `migrationAddress` value string or an
                                array of several.
                              items:
                                $ref: '#/components/schemas/migrationAddress'
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to `migrationAdminMember`. Can be
                                acquired by the `getInfo` status request. Used
                                for identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          description: >
                            Public key of the `migrationAdminMember` object.
                            Used to check the `<signatureString>` created by the
                            paired private key. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-addAddresses-yaml'
                  - $ref: '#/components/schemas/response-signedRequestError'
  '/admin-api/rpc#migration.getAddressCount':
    post:
      summary: migration.getAddressCount
      description: >
        Utility method that only the migration daemon administrator (a
        pre-created `migrationAdminMember`) can call.


        Gets the count of free `migrationAddress`(es) from 10 shards.


        To invoke this method, specify an index of the shard to start with.
      operationId: get-migration-addresses-count
      tags:
        - Address
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - migration.getAddressCount
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - startWithIndex
                          properties:
                            startWithIndex:
                              type: integer
                              description: Index of the shard to start with.
                              example: 2
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to `migrationAdminMember`. Can be
                                acquired by the `getInfo` status request. Used
                                for identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          description: >
                            Public key of the `migrationAdminMember` object.
                            Used to check the `<signatureString>` created by the
                            paired private key. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-getAddressCount-yaml'
                  - $ref: '#/components/schemas/response-signedRequestError'
  '/admin-api/rpc#deposit.migration':
    post:
      summary: deposit.migration
      description: >
        Utility method that only a pre-created `migrationDaemonMember` can call.


        Migrates Ethereum tokens to an Insolar deposit associated with a
        `member`.


        The migration process consists of the following steps:


        1. Upon the call, a migration daemon (MD) creates a deposit with
        `MIGRATION` status for some `member`.


        2. As soon as all the other active MDs confirm the deposit creation, its
        status is set to `LOCKED`.


        3. When the migration period is over, the status is set to `ACTIVE`.
      operationId: deposit-migration
      tags:
        - Member
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - deposit.migration
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - amount
                            - ethTxHash
                            - migrationAddress
                          properties:
                            amount:
                              type: string
                              description: Amount of Ethereum tokens to transfer.
                              example: '1000'
                              pattern: '^[1-9][0-9]*$'
                              minLength: 1
                              maxLength: 20
                            ethTxHash:
                              type: string
                              description: >-
                                Ethereum transaction's hash. Used for deposit
                                identification.
                              pattern: '^(0x[a-f0-9]{64})$'
                              example: >-
                                0x89f2d6994e5d152bece9ec291f6098d236ab81f76f0d4d52fb69d0cd6b6fd70d
                            migrationAddress:
                              $ref: '#/components/schemas/migrationAddress'
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to `migrationDaemonMember`. Can be
                                acquired by the `getInfo` status request. Used
                                for identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          type: string
                          pattern: >-
                            ^\s*(-+BEGIN[^-]+-+\s+[a-zA-Z0-9+\/=
                            \n]+-+END[^-]+-+|[a-zA-Z0-9+\/= \n]+)\s*$
                          description: >
                            Public key of the `migrationDaemonMember` object.
                            Used to check the `<signatureString>` created by the
                            paired private key. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-deposit-migration-yaml'
                  - $ref: '#/components/schemas/response-signedRequestError'
  '/admin-api/rpc#spec.get':
    post:
      summary: spec.get
      description: Returns this specification as a free-form JSON object in `result`.
      operationId: specGet
      tags:
        - Specification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-RPCRequest'
                - type: object
                  properties:
                    method:
                      type: string
                      enum:
                        - spec.get
                    params:
                      description: May be omitted as the method does not require any.
            example:
              jsonrpc: '2.0'
              method: spec.get
              id: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/definitions-responses-spec-yaml'
                  - $ref: '#/components/schemas/response-unsignedRequestError'
              examples:
                success:
                  value:
                    jsonrpc: '2.0'
                    id: 1
                    result:
                      specification: as a free-form JSON object
  '/admin-api/rpc#account.transferToDeposit':
    post:
      summary: account.transferToDeposit
      description: >
        Transfers XNS coin fractions from a member's current account to the
        deposit of another member.


        To invoke this method, specify the following parameters:


        * in `params`, `reference` to the sender's member object;

        * in `callParams`:
          * `toDepositName`—name of the receiver's deposit to send the funs to;
          * `amount`—amount of XNS coin fractions to send;
          * `toMemberReference`—reference to the receiver's member object.
      operationId: account.transferToDeposit
      tags:
        - Member
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - account.transferToDeposit
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - toDepositName
                            - toMemberReference
                            - amount
                          properties:
                            toDepositName:
                              type: string
                              description: Deposit name. Used for deposit identification.
                              example: genesis_deposit2
                            toMemberReference:
                              allOf:
                                - $ref: '#/components/schemas/reference'
                                - description: Reference to the receiver's member object.
                                  example: >-
                                    insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                            amount:
                              type: string
                              description: >
                                Amount of XNS coin fractions to transfer—a whole
                                number. The smallest fraction of XNS is
                                `1/10^10`. To specify the amount in fractions,
                                multiply XNS by `10^10`. For example: `0.1 XNS =
                                0.1 * 10^10 = 1000000000`.
                              example: '1000000000'
                              pattern: '^[1-9][0-9]*$'
                              minLength: 1
                              maxLength: 20
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to your `member` object. Used for
                                identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          type: string
                          pattern: >-
                            ^\s*(-+BEGIN[^-]+-+\s+[a-zA-Z0-9+\/=
                            \n]+-+END[^-]+-+|[a-zA-Z0-9+\/= \n]+)\s*$
                          description: >
                            Public key of your `member` object. Used to check
                            the `<signatureString>` created by the paired
                            private key. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-success'
                  - $ref: '#/components/schemas/response-signedRequestError'
  '/admin-api/rpc#deposit.createFund':
    post:
      summary: deposit.createFund
      description: >
        Utility method that only the migration admin member can call.


        Creates a deposit named `genesis_deposit2` for the allocation of 500B of
        XNS coins from existing funds.


        To invoke this method, specify a `lockupEndDate` in `callParams`. Before
        this date, the coins cannot be moved from the deposit.


        Note: This method is to be removed in a future release after the coins
        are distributed to members.
      operationId: deposit-create-fund
      tags:
        - Daemon
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - deposit.createFund
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - lockupEndDate
                          properties:
                            lockupEndDate:
                              type: string
                              description: >-
                                End date of the lockup. During the lockup, coins
                                cannot be moved.
                              example: '1599868800'
                              pattern: '^[0-9]{10}$'
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to `migrationAdminMember`. Can be
                                acquired by the `network.getInfo` status
                                request. Used for identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          description: >
                            Public key of the `migrationAdminMember` object.
                            Used to check the `<signatureString>` created by the
                            paired private key. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-success'
                  - $ref: '#/components/schemas/response-signedRequestError'
  '/admin-api/rpc#deposit.transferToDeposit':
    post:
      summary: deposit.transferToDeposit
      description: >
        Transfer coins between specified deposits.


        To invoke this method, specify the following parameters:


        * in `params`, `reference` to the sender's member object;

        * in `callParams`: `fromDepositName`—name of the sender's deposit to
        withdraw the funds from;
          * `toDepositName`—name of the receiver's deposit to send the funds to;
          * `toMemberReference`—reference to the receiver's member object.
      operationId: deposit.transferToDeposit
      tags:
        - Member
      parameters:
        - $ref: '#/components/parameters/digestHeader'
        - $ref: '#/components/parameters/signatureHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/request-contractCall'
                - type: object
                  required:
                    - params
                  properties:
                    params:
                      required:
                        - callParams
                        - reference
                        - publicKey
                      properties:
                        callSite:
                          enum:
                            - deposit.transferToDeposit
                        callParams:
                          description: Parameters of the contract's internal method.
                          required:
                            - fromDepositName
                            - toDepositName
                            - toMemberReference
                          properties:
                            fromDepositName:
                              type: string
                              description: >-
                                Deposit name or Ethereum transaction's hash.
                                Used for deposit identification.
                              example: genesis_deposit
                            toDepositName:
                              type: string
                              description: Deposit name. Used for deposit identification.
                              example: genesis_deposit2
                            toMemberReference:
                              allOf:
                                - $ref: '#/components/schemas/reference'
                                - description: Reference to the receiver's member object.
                                  example: >-
                                    insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        reference:
                          allOf:
                            - $ref: '#/components/schemas/reference'
                            - description: >-
                                Reference to your `member` object. Used for
                                identification.
                              example: >-
                                insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                        publicKey:
                          type: string
                          pattern: >-
                            ^\s*(-+BEGIN[^-]+-+\s+[a-zA-Z0-9+\/=
                            \n]+-+END[^-]+-+|[a-zA-Z0-9+\/= \n]+)\s*$
                          description: >
                            Public key of your `member` object. Used to check
                            the `<signatureString>` created by the paired
                            private key. Format: a [PEM
                            key](https://tools.ietf.org/html/rfc1421) in a
                            Base64 string.
                          example: >-
                            -----BEGIN PUBLIC KEY-----

                            MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEMSbA4KvO/jlwY+8WFDEdwhCLlsEC

                            F3/GYvu9iTWHwCctx1wTbGGjNLY03EjXyYxaf8coNbSbZeu+jXcWeMHG0A==

                            -----END PUBLIC KEY-----
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/response-success'
                  - $ref: '#/components/schemas/response-signedRequestError'
tags:
  - name: Node
  - name: Member
  - name: Daemon
  - name: Address
  - name: Specification
components:
  schemas:
    request-RPCRequest:
      description: Base definition for HTTP JSON RPC 2.0 requests.
      type: object
      required:
        - jsonrpc
        - method
        - id
      properties:
        jsonrpc:
          type: string
          enum:
            - '2.0'
          description: |
            [JSON RPC protocol](https://www.jsonrpc.org/specification) version.
          example: '2.0'
        id:
          oneOf:
            - type: string
            - type: number
              nullable: true
          description: Request's ID to link it with the corresponding result.
          example: 1
        method:
          type: string
          description: Name of the method to invoke.
        params:
          type: object
      x-json-schema-id: request/RPCRequest
    definitions-responses-Seed-yaml:
      title: Success
      allOf:
        - $ref: '#/components/schemas/response-RPCResponse'
        - properties:
            result:
              type: object
              required:
                - seed
              properties:
                seed:
                  type: string
                  description: Base64 string with a random range of bytes.
                  example: U1wGm8xl+WUFIPFLdFupTXKMXbLoJbv0nA/ImZAtHZk=
      x-json-schema-id: definitions/responses/Seed.yaml
    response-unsignedRequestError:
      title: Errors
      description: >-
        Error response to a un-signed request. Can contain multiple errors with
        different codes.
      oneOf:
        - $ref: '#/components/schemas/schemas-response-executionError-yaml'
        - $ref: '#/components/schemas/schemas-response-timeoutError-yaml'
        - $ref: '#/components/schemas/schemas-response-internalError-yaml'
        - $ref: '#/components/schemas/schemas-response-methodNotFoundError-yaml'
        - $ref: '#/components/schemas/schemas-response-serviceUnavailable-yaml'
      properties:
        error:
          required:
            - data
          properties:
            data:
              type: object
              description: Additional error information.
              required:
                - traceID
              properties:
                traceID:
                  $ref: '#/components/schemas/traceID'
      x-json-schema-id: response/unsignedRequestError
    definitions-responses-Status-yaml:
      title: Success
      allOf:
        - $ref: '#/components/schemas/response-RPCResponse'
        - properties:
            result:
              type: object
              required:
                - networkState
                - nodeState
                - additionalNodeState
                - origin
                - activeListSize
                - workingListSize
                - nodes
                - pulseNumber
                - entropy
                - version
              properties:
                networkState:
                  type: string
                  enum:
                    - completeNetworkState
                nodeState:
                  type: string
                  example: ''
                additionalNodeState:
                  type: string
                  example: ''
                origin:
                  $ref: '#/components/schemas/definitions-nodeShort-yaml'
                activeListSize:
                  type: integer
                  example: 1
                  description: Size of the list of active nodes.
                workingListSize:
                  type: integer
                  example: 1
                  description: Size of the list of working nodes.
                nodes:
                  type: array
                  description: Array of nodes in the network.
                  minItems: 1
                  items:
                    $ref: '#/components/schemas/definitions-nodeShort-yaml'
                pulseNumber:
                  type: integer
                  format: int64
                  example: 19424511
                  description: Current pulse number.
                entropy:
                  type: string
                  example: >-
                    j88wsuBEZjZHBkg9ci4yJqfb5jXcgeUZZfxQI1tEm4+PzzCy4ERmNkcGSD1yLjImp9vmNdyB5Rll/FAjW0Sbjw==
                  description: Current entropy.
                version:
                  type: string
                  example: v0.8.5
                  description: Insolar Platform version.
      x-json-schema-id: definitions/responses/Status.yaml
    definitions-responses-Info-yaml:
      title: Success
      allOf:
        - $ref: '#/components/schemas/response-RPCResponse'
        - properties:
            result:
              type: object
              required:
                - rootDomain
                - rootMember
                - migrationAdminMember
                - feeMember
                - migrationDaemonMembers
                - nodeDomain
                - traceID
              properties:
                rootDomain:
                  allOf:
                    - $ref: '#/components/schemas/reference'
                  description: Reference to a root domain.
                  example: 'insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE'
                rootMember:
                  allOf:
                    - $ref: '#/components/schemas/reference'
                  description: Reference to a root member.
                  example: 'insolar:1AfNjPWh7Ut-P7Ky7Mj7HLCte3gjGXi4RpXNxTvrhlww'
                migrationAdminMember:
                  allOf:
                    - $ref: '#/components/schemas/reference'
                  description: Reference to a migration admin member.
                  example: 'insolar:1LBBNgDpzKt0YGkrInkqGlsME4RAnSzQRIySreTX0j7g'
                feeMember:
                  allOf:
                    - $ref: '#/components/schemas/reference'
                  description: Reference to a member with fee wallet.
                  example: 'insolar:1JrjqR6hvlHSRKF2zmBO1h8DBHuvOwAparrn9RVX8knw'
                migrationDaemonMembers:
                  type: array
                  minItems: 1
                  description: Array of references to migration daemon members.
                  items:
                    allOf:
                      - $ref: '#/components/schemas/reference'
                    example: 'insolar:1GhYBmUixzQlaw5tK4WRM8jdKY89QnS-0WgbhoI8y3cQ'
                nodeDomain:
                  allOf:
                    - $ref: '#/components/schemas/reference'
                  description: Reference to a node domain.
                  example: 'insolar:1Fc0nrPGFVHiqrCEGrxUT6YS-LbDqHN-wTaZfdyqC0OI'
                traceID:
                  $ref: '#/components/schemas/traceID'
      x-json-schema-id: definitions/responses/Info.yaml
    request-contractCall:
      description: |
        Call to a contract's `callSite`, it's internal 'method'.
      type: object
      allOf:
        - $ref: '#/components/schemas/request-RPCRequest'
        - type: object
          properties:
            method:
              enum:
                - contract.call
            params:
              required:
                - callSite
                - seed
                - publicKey
              properties:
                seed:
                  type: string
                  description: 'Seed returned by [getSeed](/#operation/get-seed).'
                  example: U1wGm8xl+WUFIPFLdFupTXKMXbLoJbv0nA/ImZAtHZk=
                callSite:
                  type: string
                  description: Call point for the contract's method.
                callParams:
                  type: object
                publicKey:
                  type: string
                  pattern: >-
                    ^\s*(-+BEGIN[^-]+-+\s+[a-zA-Z0-9+\/=
                    \n]+-+END[^-]+-+|[a-zA-Z0-9+\/= \n]+)\s*$
      x-json-schema-id: request/contractCall
    reference:
      type: string
      pattern: '^insolar:(0[a-zA-Z0-9_-]{2,43}|1[a-zA-Z0-9_-]{42,43})$'
      example: 'insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE'
      x-json-schema-id: reference
    definitions-responses-balance-yaml:
      title: Success
      allOf:
        - $ref: '#/components/schemas/response-success'
        - properties:
            result:
              properties:
                callResult:
                  required:
                    - balance
                  properties:
                    balance:
                      type: string
                      example: '1000000000'
                      description: Wallet's balance.
                    deposits:
                      type: array
                      description: Deposits associated with the member.
                      items:
                        type: object
                        required:
                          - balance
                          - holdStartDate
                          - holdReleaseDate
                          - amount
                          - ethTxHash
                          - vestingType
                          - lockup
                          - vesting
                          - vestingStep
                          - confirmerReferences
                        properties:
                          balance:
                            type: string
                            example: '1000000000'
                            description: Deposit's balance.
                          holdStartDate:
                            type: integer
                            format: int64
                            example: 1568766470
                            description: Hold start date in Unix timestamp format.
                          holdReleaseDate:
                            type: integer
                            format: int64
                            example: 1571920070
                            description: >-
                              Date to release the hold on tokens (in Unix
                              timestamp format).
                          amount:
                            type: string
                            description: >
                              Amount of XNS coin fractions in the deposit — a
                              whole number. The smallest fraction of XNS is
                              `1/10^10`. To calculate XNS, divide the number of
                              fractions by `10^10`. For example: `1000000000
                              fractions / 10^10 = 0.1 XNS`.
                            example: '100'
                          ethTxHash:
                            type: string
                            description: >-
                              Ethereum transaction's hash associated with the
                              deposit.
                            example: '0xea674fdde714fd979de3edf0f56aa9716b898ec8'
                          vestingType:
                            type: integer
                            enum:
                              - 0
                              - 1
                              - 2
                              - 3
                              - 4
                            description: |
                              * `0` — default deposit type.
                              * `1` — Funds and Enterprise.
                              * `2` — Network incentives.
                              * `3` — Application incentives.
                              * `4` — Foundation.
                          lockup:
                            type: integer
                            format: int64
                            example: 31536000
                            description: Hold delay in seconds.
                          vesting:
                            type: integer
                            format: int64
                            example: 31536000
                            description: Partial release period in seconds.
                          vestingStep:
                            type: integer
                            format: int64
                            example: 86400
                            description: >-
                              Delay (vesting step) between partial releases in
                              seconds.
                          confirmerReferences:
                            type: array
                            description: >-
                              Array of references to migration daemons which
                              have granted their confirmations.
                            items:
                              type: object
                              required:
                                - reference
                                - amount
                              properties:
                                reference:
                                  type: string
                                  pattern: >-
                                    ^insolar:(0[a-zA-Z0-9_-]{2,43}|1[a-zA-Z0-9_-]{42,43})$
                                  example: >-
                                    insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE
                                  x-json-schema-id: reference
                                  description: Reference to a migration daemon.
                                amount:
                                  type: string
                                  description: >-
                                    Amount of XNS fractions that migration
                                    daemon approved to migrate.
                                  example: '100'
      x-json-schema-id: definitions/responses/balance.yaml
    response-signedRequestError:
      title: Errors
      description: >-
        Error response to a signed request. Can contain multiple errors with
        different codes.
      oneOf:
        - $ref: '#/components/schemas/schemas-response-executionError-yaml'
        - $ref: '#/components/schemas/schemas-response-timeoutError-yaml'
        - $ref: '#/components/schemas/schemas-response-internalError-yaml'
        - $ref: '#/components/schemas/schemas-response-invalidParamsError-yaml'
        - $ref: '#/components/schemas/schemas-response-invalidRequestError-yaml'
        - $ref: '#/components/schemas/schemas-response-methodNotFoundError-yaml'
        - $ref: '#/components/schemas/schemas-response-parseError-yaml'
        - $ref: '#/components/schemas/schemas-response-unauthorizedError-yaml'
        - $ref: '#/components/schemas/schemas-response-serviceUnavailable-yaml'
      properties:
        error:
          required:
            - data
          properties:
            data:
              type: object
              description: Additional error information.
              required:
                - requestReference
                - traceID
              properties:
                requestReference:
                  $ref: '#/components/schemas/requestReference'
                traceID:
                  $ref: '#/components/schemas/traceID'
      x-json-schema-id: response/signedRequestError
    response-success:
      title: Success
      description: A successful response.
      allOf:
        - $ref: '#/components/schemas/response-RPCResponse'
        - properties:
            result:
              required:
                - callResult
                - requestReference
                - traceID
              properties:
                callResult:
                  type: object
                  description: Method's call result.
                requestReference:
                  $ref: '#/components/schemas/requestReference'
                traceID:
                  $ref: '#/components/schemas/traceID'
      x-json-schema-id: response/success
    response-daemon-status-yaml:
      title: Success
      description: A successful response.
      allOf:
        - $ref: '#/components/schemas/response-RPCResponse'
        - properties:
            result:
              required:
                - callResult
                - requestReference
                - traceID
              properties:
                callResult:
                  required:
                    - status
                  properties:
                    status:
                      type: string
                      enum:
                        - active
                        - inactive
                      description: |
                        Migration daemon's current status.
                      example: active
                requestReference:
                  $ref: '#/components/schemas/requestReference'
                traceID:
                  $ref: '#/components/schemas/traceID'
      x-json-schema-id: response/daemon-status.yaml
    migrationAddress:
      type: string
      pattern: '^0x[a-fA-F0-9]{40}$'
      example: '0x12eB9bce34341D1163814843f8DcA44DFebe913c'
      description: >-
        Special address in the Ethereum network — transfer destination for INS
        tokens during the migration period.
      x-json-schema-id: migrationAddress
    response-addAddresses-yaml:
      title: Success
      description: A successful response.
      allOf:
        - $ref: '#/components/schemas/response-RPCResponse'
        - properties:
            result:
              required:
                - callResult
                - requestReference
                - traceID
              properties:
                callResult:
                  required:
                    - totalNumber
                  properties:
                    totalNumber:
                      type: integer
                      description: Number of already added migration addresses.
                      example: 45
                requestReference:
                  $ref: '#/components/schemas/requestReference'
                traceID:
                  $ref: '#/components/schemas/traceID'
      x-json-schema-id: response/addAddresses.yaml
    response-getAddressCount-yaml:
      title: Success
      description: A successful response.
      allOf:
        - $ref: '#/components/schemas/response-RPCResponse'
        - properties:
            result:
              required:
                - callResult
                - requestReference
                - traceID
              properties:
                callResult:
                  type: array
                  description: >-
                    Array of free address counts from 10 shards with respective
                    indexes.
                  items:
                    type: object
                    required:
                      - shardIndex
                      - freeCount
                    properties:
                      shardIndex:
                        type: integer
                        description: Shard index.
                        example: 2
                      freeCount:
                        type: integer
                        description: Count of free migration addresses.
                        example: 2000
                requestReference:
                  $ref: '#/components/schemas/requestReference'
                traceID:
                  $ref: '#/components/schemas/traceID'
      x-json-schema-id: response/getAddressCount.yaml
    response-deposit-migration-yaml:
      title: Success
      allOf:
        - $ref: '#/components/schemas/response-success'
        - properties:
            result:
              properties:
                callResult:
                  required:
                    - memberReference
                  properties:
                    memberReference:
                      allOf:
                        - $ref: '#/components/schemas/reference'
                        - description: Reference to the member who owns the deposit.
                          example: 'insolar:1GlDeBOnc7Ar5N34ShBdkx_SAVOfnZJKUCoQMi0_OcvE'
      x-json-schema-id: response/deposit-migration.yaml
    definitions-responses-spec-yaml:
      title: Success
      allOf:
        - $ref: '#/components/schemas/response-RPCResponse'
        - properties:
            result:
              type: object
              description: This specification as a free-form JSON object.
      x-json-schema-id: definitions/responses/spec.yaml
    response-RPCResponse:
      description: Base definition for HTTP JSON RPC 2.0 responses.
      type: object
      required:
        - jsonrpc
        - id
        - result
      properties:
        jsonrpc:
          type: string
          enum:
            - '2.0'
          description: |
            [JSON RPC protocol](https://www.jsonrpc.org/specification) version.
        id:
          oneOf:
            - type: string
            - type: number
              nullable: true
          description: ID passed by the request.
          example: 1
        result:
          type: object
          description: Execution result of the invoked method.
      x-json-schema-id: response/RPCResponse
    schemas-response-executionError-yaml:
      description: Error during execution.
      title: executionError
      allOf:
        - $ref: '#/components/schemas/response-RPCError-yaml'
        - properties:
            error:
              properties:
                code:
                  enum:
                    - -31103
                message:
                  enum:
                    - Execution error.
                data:
                  required:
                    - trace
                  properties:
                    trace:
                      type: array
                      description: An array of error message(s).
                      minItems: 1
                      items:
                        type: string
                      example:
                        - '[ makeCall ] Can''t send request'
                        - >-
                          [ ContractRequester::SendRequest ] Can't route call:
                          couldn't dispatch event
                        - >-
                          RPC call returned error: [ HandleCall.handleActual ]
                          can't create request: failed to fetch index from heavy
                        - >-
                          failed to fetch object index for
                          1tJCbWvMpRjVGSMe2ApfLFKFP42pYRX7PvHrs1VCAA: index not
                          found
                    traceID:
                      example: 0b9ac245-2522-4364-9059-efc17907ce54
      x-json-schema-id: schemas/response/executionError.yaml
    schemas-response-timeoutError-yaml:
      description: Request's timeout has expired.
      title: timeoutError
      allOf:
        - $ref: '#/components/schemas/response-RPCError-yaml'
        - properties:
            error:
              properties:
                code:
                  enum:
                    - -31106
                message:
                  enum:
                    - Request's timeout has expired.
      x-json-schema-id: schemas/response/timeoutError.yaml
    schemas-response-internalError-yaml:
      description: Internal JSON RPC error.
      title: internalError
      allOf:
        - $ref: '#/components/schemas/response-RPCError-yaml'
        - properties:
            error:
              properties:
                code:
                  enum:
                    - -31603
                message:
                  enum:
                    - Internal Platform error.
                data:
                  required:
                    - trace
                  properties:
                    trace:
                      type: array
                      description: An array of error message(s).
                      minItems: 1
                      items:
                        type: string
                      example:
                        - failed to get next seed
                    traceID:
                      example: 0b9ac245-2522-4364-9059-efc17907ce54
      x-json-schema-id: schemas/response/internalError.yaml
    schemas-response-methodNotFoundError-yaml:
      description: Method does not exist / is not available.
      title: methodNotFoundError
      allOf:
        - $ref: '#/components/schemas/response-RPCError-yaml'
        - properties:
            error:
              properties:
                code:
                  enum:
                    - -31601
                message:
                  enum:
                    - Method does not exist / is not available.
      x-json-schema-id: schemas/response/methodNotFoundError.yaml
    schemas-response-serviceUnavailable-yaml:
      description: Service is unavailable and cannot process API requests right now.
      title: unavailableError
      allOf:
        - $ref: '#/components/schemas/response-RPCError-yaml'
        - properties:
            error:
              properties:
                code:
                  enum:
                    - -31429
                message:
                  enum:
                    - 'Service unavailable, try again later.'
      x-json-schema-id: schemas/response/serviceUnavailable.yaml
    traceID:
      type: string
      description: Internal debugging information. May be an empty string.
      example: 0b9ac245-2522-4364-9059-efc17907ce54
      x-json-schema-id: traceID
    definitions-nodeShort-yaml:
      title: Node
      description: Node's information.
      type: object
      required:
        - reference
        - role
        - isWorking
      properties:
        reference:
          allOf:
            - $ref: '#/components/schemas/reference'
            - example: 'insolar:1GhYBmUixzQlaw5tK4WRM8jdKY89QnS-0WgbhoI8y3cQ'
              description: Node's reference.
        role:
          $ref: '#/components/schemas/schemas-nodeType-yaml'
        isWorking:
          type: boolean
      x-json-schema-id: definitions/nodeShort.yaml
    schemas-response-invalidParamsError-yaml:
      description: Invalid method parameter(s).
      title: invalidParamsError
      allOf:
        - $ref: '#/components/schemas/response-RPCError-yaml'
        - properties:
            error:
              properties:
                code:
                  enum:
                    - -31602
                message:
                  enum:
                    - Invalid method parameter(s).
      x-json-schema-id: schemas/response/invalidParamsError.yaml
    schemas-response-invalidRequestError-yaml:
      description: The JSON received is not a valid request payload.
      title: invalidRequestError
      allOf:
        - $ref: '#/components/schemas/response-RPCError-yaml'
        - properties:
            error:
              properties:
                code:
                  enum:
                    - -31600
                message:
                  enum:
                    - The JSON received is not a valid request payload.
      x-json-schema-id: schemas/response/invalidRequestError.yaml
    schemas-response-parseError-yaml:
      description: Received an invalid JSON.
      title: parseError
      allOf:
        - $ref: '#/components/schemas/response-RPCError-yaml'
        - properties:
            error:
              properties:
                code:
                  enum:
                    - -31700
                message:
                  enum:
                    - >-
                      Parsing error on the server side: received an invalid
                      JSON.
      x-json-schema-id: schemas/response/parseError.yaml
    schemas-response-unauthorizedError-yaml:
      description: Action is not authorized.
      title: unauthorizedError
      allOf:
        - $ref: '#/components/schemas/response-RPCError-yaml'
        - properties:
            error:
              properties:
                code:
                  enum:
                    - -31401
                message:
                  enum:
                    - Action is not authorized.
      x-json-schema-id: schemas/response/unauthorizedError.yaml
    requestReference:
      type: string
      description: >-
        Reference to a request record initialized by the method's call. May be
        an empty string.
      example: 'insolar:1FUpUFSfNpmyX05nustQ7B8al0xj-_j3_ndqXfgLRra4.record'
      pattern: '^insolar:1[a-zA-Z0-9_-]{42,43}\.record$'
      x-json-schema-id: requestReference
    response-RPCError-yaml:
      description: Base definition for HTTP JSON RPC 2.0 error responses.
      type: object
      required:
        - jsonrpc
        - id
        - error
      properties:
        jsonrpc:
          type: string
          enum:
            - '2.0'
          description: |
            [JSON RPC protocol](https://www.jsonrpc.org/specification) version.
        id:
          oneOf:
            - type: string
            - type: number
              nullable: true
          description: ID passed by the request.
          example: 1
        error:
          type: object
          description: Error returned by the invoked method.
          required:
            - code
            - message
          properties:
            code:
              type: integer
              description: Number that indicates the error type.
            message:
              type: string
              description: Human-readable short error message.
      x-json-schema-id: response/RPCError.yaml
    schemas-nodeType-yaml:
      title: node Type
      type: string
      description: Node types
      enum:
        - heavy_material
        - light_material
        - virtual
      x-json-schema-id: schemas/nodeType.yaml
  examples:
    executionError:
      x-mock-call-factor: -1
      value:
        jsonrpc: '2.0'
        id: 1
        error:
          code: -31103
          message: Execution error.
          data:
            trace:
              - '[ makeCall ] Can''t send request'
              - >-
                [ ContractRequester::SendRequest ] Can't route call: couldn't
                dispatch event
              - >-
                RPC call returned error: [ HandleCall.handleActual ] can't
                create request: failed to fetch index from heavy
              - >-
                failed to fetch object index for
                1tJCbWvMpRjVGSMe2ApfLFKFP42pYRX7PvHrs1VCAA: index not found
            traceID: 0b9ac245-2522-4364-9059-efc17907ce54
  parameters:
    digestHeader:
      name: Digest
      in: header
      description: >
        [Digest HTTP header](https://tools.ietf.org/html/rfc3230#section-4.3.2)
        with an SHA-256 hash of the request's payload bytes in a Base64
        `<hashString>`.
      example: SHA-256=<hashString>
      required: true
      schema:
        type: string
        pattern: ^SHA-256=.+$
    signatureHeader:
      name: Signature
      in: header
      description: >
        [Signature HTTP
        header](https://tools.ietf.org/id/draft-cavage-http-signatures-11.html#sig-header)
        with the signed hash bytes in a Base64 `<signatureString>`.


        The signature is:


        * in [ASN.1 DER
        format](https://www.itu.int/rec/dologin_pub.asp?lang=e&id=T-REC-X.690-201508-I!!PDF-E&type=items);

        * generated by an ECDSA private key;

        * checked by the paired public key (`publicKey`).
      example: >-
        keyId="member-pub-key", algorithm="ecdsa", headers="digest",
        signature=<signatureString>
      required: true
      schema:
        type: string
